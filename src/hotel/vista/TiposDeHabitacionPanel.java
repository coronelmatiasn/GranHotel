/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hotel.vista;

import hotel.Conexion;
import hotel.modelo.TipoDeCama;
import hotel.modelo.TipoDeCamaData;
import hotel.modelo.TipoHabitacion;
import hotel.modelo.TipoHabitacionData;
import java.util.ArrayList;
import java.util.stream.Collectors;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.apache.commons.lang3.text.WordUtils;

/**
 *
 * @author Fati
 */
public class TiposDeHabitacionPanel extends javax.swing.JPanel {
    TipoDeCamaData tcd;
    TipoHabitacionData thd;
    Conexion conexion;
    /**
     * Creates new form TiposDeHabitacionPanel
     */
    public TiposDeHabitacionPanel() {
        
        try {
            //se crea una conexion del tipo Conexion donde se especifica la base donde se va a conectar.
            conexion = new Conexion("jdbc:mysql://localhost/hotel", "root", "");
        } catch (Exception e) {  
           JOptionPane.showMessageDialog(null,"se produjo un error al conectar con la base de datos: " + e);
        } 
        
        thd = new TipoHabitacionData(conexion);
        tcd = new TipoDeCamaData(conexion);
        
        initComponents();
        crearModeloDeTabla();
        setearContenidoDeTabla(thd.obtenerTipoHabitacion());
    }
    
    private void crearModeloDeTabla() {
        DefaultTableModel dataModel;
        
        //guarda los nombres de las columnas en un array
        String col[] = {
            "Categoria", 
            "Cant Max Personas", 
            "Precio por Noche", 
            "Camas"
        };

        //crea un modelo de tabla usando los nombres del array creado y 0 filas
        //sobreescribe el metodo isCellEditable para que retorne false en todas las celdas y no se puedan editar
        dataModel = new DefaultTableModel(col, 0){
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };

        //a√±ade el modelo a la tabla
        tabla.setModel(dataModel);
    }

    private void setearContenidoDeTabla(ArrayList<TipoHabitacion> tHabitaciones) {
        DefaultTableModel dataModel = (DefaultTableModel) tabla.getModel();
        //se elimina todo el contenido de la tabla si es que hay        
        for(int i = dataModel.getRowCount(); i > 0; i--) {
            dataModel.removeRow(i - 1);
        }

        //se inserta el contenido nuevo fila por fila
        for(TipoHabitacion th : tHabitaciones) {
            Object row[] = {
                th.getCategoria(), 
                th.getCantidadMaxPersonas(), 
                th.getPrecioXNoche(),
                th.getTipoCama().getCategoria(),
            };

            dataModel.addRow(row);
        }
    }
    
    private ArrayList<String> crearDataComboBox() {
        ArrayList<String> listaCategorias = (ArrayList) tcd
            .obtenerCategorias()
            .stream()
            .map(c -> WordUtils.capitalizeFully(c))
            .collect(Collectors.toList());
        
        return listaCategorias;
    }

    private void limpiarCampos() {
        campoCategoria.setText("");
        campoCantPersonas.setText("");
        campoPrecio.setText("");
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        campoCategoria = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        campoCantPersonas = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();
        campoPrecio = new javax.swing.JTextField();
        jSeparator3 = new javax.swing.JSeparator();
        cBoxTiposDeCama = new javax.swing.JComboBox(crearDataComboBox().toArray());
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        btnAgregar = new javax.swing.JButton();
        btnBorrar = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        cantPersonasValidacion = new javax.swing.JLabel();
        precioValidacion = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setForeground(new java.awt.Color(0, 0, 0));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Categoria");
        jLabel1.setToolTipText("");

        campoCategoria.setBackground(new java.awt.Color(255, 255, 255));
        campoCategoria.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        campoCategoria.setForeground(new java.awt.Color(0, 0, 0));
        campoCategoria.setBorder(null);
        campoCategoria.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                campoCategoriaFocusLost(evt);
            }
        });

        jSeparator1.setBackground(new java.awt.Color(102, 204, 255));
        jSeparator1.setForeground(new java.awt.Color(102, 204, 255));

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Cantidad Maxima de Personas");
        jLabel2.setToolTipText("");

        campoCantPersonas.setBackground(new java.awt.Color(255, 255, 255));
        campoCantPersonas.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        campoCantPersonas.setForeground(new java.awt.Color(0, 0, 0));
        campoCantPersonas.setBorder(null);

        jSeparator2.setBackground(new java.awt.Color(102, 204, 255));
        jSeparator2.setForeground(new java.awt.Color(102, 204, 255));

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Precio");
        jLabel3.setToolTipText("");

        campoPrecio.setBackground(new java.awt.Color(255, 255, 255));
        campoPrecio.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        campoPrecio.setForeground(new java.awt.Color(0, 0, 0));
        campoPrecio.setBorder(null);

        jSeparator3.setBackground(new java.awt.Color(102, 204, 255));
        jSeparator3.setForeground(new java.awt.Color(102, 204, 255));

        cBoxTiposDeCama.setBackground(new java.awt.Color(255, 255, 255));
        cBoxTiposDeCama.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        cBoxTiposDeCama.setForeground(new java.awt.Color(0, 0, 0));

        tabla.setBackground(new java.awt.Color(255, 255, 255));
        tabla.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        tabla.setForeground(new java.awt.Color(0, 0, 0));
        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabla.setGridColor(new java.awt.Color(102, 204, 255));
        tabla.getTableHeader().setReorderingAllowed(false);
        tabla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabla);

        btnAgregar.setBackground(new java.awt.Color(255, 255, 255));
        btnAgregar.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        btnAgregar.setForeground(new java.awt.Color(0, 0, 0));
        btnAgregar.setText("AGREGAR");
        btnAgregar.setBorder(null);
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnBorrar.setBackground(new java.awt.Color(255, 255, 255));
        btnBorrar.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        btnBorrar.setForeground(new java.awt.Color(0, 0, 0));
        btnBorrar.setText("BORRAR");
        btnBorrar.setBorder(null);
        btnBorrar.setEnabled(false);
        btnBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarActionPerformed(evt);
            }
        });

        btnModificar.setBackground(new java.awt.Color(255, 255, 255));
        btnModificar.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        btnModificar.setForeground(new java.awt.Color(0, 0, 0));
        btnModificar.setText("MODIFICAR");
        btnModificar.setBorder(null);
        btnModificar.setEnabled(false);
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        cantPersonasValidacion.setBackground(new java.awt.Color(255, 255, 255));
        cantPersonasValidacion.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        cantPersonasValidacion.setForeground(new java.awt.Color(255, 0, 0));

        precioValidacion.setBackground(new java.awt.Color(255, 255, 255));
        precioValidacion.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        precioValidacion.setForeground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 520, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAgregar)
                        .addGap(63, 63, 63)
                        .addComponent(btnModificar)
                        .addGap(69, 69, 69)
                        .addComponent(btnBorrar))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jSeparator1)
                                    .addComponent(campoCategoria)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jSeparator2, javax.swing.GroupLayout.DEFAULT_SIZE, 81, Short.MAX_VALUE)
                                    .addComponent(campoCantPersonas)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jSeparator3)
                                    .addComponent(campoPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(24, 24, 24)
                                .addComponent(cBoxTiposDeCama, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cantPersonasValidacion, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(precioValidacion, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(campoCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(campoCantPersonas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cantPersonasValidacion, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(campoPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(cBoxTiposDeCama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(precioValidacion, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAgregar)
                    .addComponent(btnModificar)
                    .addComponent(btnBorrar))
                .addGap(36, 36, 36)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        String categoria;
        int cantPersonas;
        double precio;
        TipoDeCama tCama;
        
        try {
            cantPersonas = Integer.parseInt(campoCantPersonas.getText());
            
            cantPersonasValidacion.setText("");
        } catch(NumberFormatException e) {
            cantPersonasValidacion.setText("Inserte un numero");
            
            return;
        }
        
        try {
            precio = Double.parseDouble(campoPrecio.getText());
            
            precioValidacion.setText("");
        } catch(NumberFormatException e) {
            precioValidacion.setText("Inserte un monto v√°lido");
            
            return;
        }
        
        categoria = campoCategoria.getText().toLowerCase();
        tCama = tcd.buscarTipoCama(cBoxTiposDeCama.getSelectedItem().toString().toLowerCase());
        
        thd.guardarTipoHabitacion(new TipoHabitacion(categoria, cantPersonas, precio, tCama));
        
        setearContenidoDeTabla(thd.obtenerTipoHabitacion());
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void campoCategoriaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campoCategoriaFocusLost
        String categoria;
        
        categoria = campoCategoria.getText();
        
        if(thd.existeTipoHabitacion(categoria)) {
            btnModificar.setEnabled(true);
            btnBorrar.setEnabled(true);
            btnAgregar.setEnabled(false);
        } else {
            btnModificar.setEnabled(false);
            btnBorrar.setEnabled(false);
            btnAgregar.setEnabled(true);
        }
    }//GEN-LAST:event_campoCategoriaFocusLost

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        TipoHabitacion th;
        TipoDeCama tc;
        String categoria;
        int cantPersonas;
        double precio;
        
        try {
            cantPersonas = Integer.parseInt(campoCantPersonas.getText());
            
            cantPersonasValidacion.setText("");
        } catch(NumberFormatException e) {
            cantPersonasValidacion.setText("Inserte un numero");
            
            return;
        }
        
        try {
            precio = Double.parseDouble(campoPrecio.getText());
            
            precioValidacion.setText("");
        } catch(NumberFormatException e) {
            precioValidacion.setText("Inserte un monto v√°lido");
            
            return;
        }
        
        categoria = campoCategoria.getText().toLowerCase();
        tc = tcd.buscarTipoCama(cBoxTiposDeCama.getSelectedItem().toString().toLowerCase());
        
        th = new TipoHabitacion(categoria, cantPersonas, precio, tc);
        
        thd.modificarTipoHabitacion(categoria, th);
        
        setearContenidoDeTabla(thd.obtenerTipoHabitacion());
    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarActionPerformed
        String categoria = campoCategoria.getText().toLowerCase();
        
        thd.borrarTipoHabitacion(categoria);
        
        limpiarCampos();
        
        btnModificar.setEnabled(false);
        btnBorrar.setEnabled(false);
        btnAgregar.setEnabled(true);
        
        setearContenidoDeTabla(thd.obtenerTipoHabitacion());
    }//GEN-LAST:event_btnBorrarActionPerformed

    private void tablaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaMouseClicked
        int cantPersonas;
        String categoria, cama;
        double precio;
        if(tabla.getSelectedRow() != -1) {
            int row = tabla.getSelectedRow();
            
            categoria = (String) tabla.getValueAt(row, 0);
            cantPersonas = (int) tabla.getValueAt(row, 1);
            precio = (double) tabla.getValueAt(row, 2);
            cama = (String) tabla.getValueAt(row, 3);
            

            campoCategoria.setText(categoria);
            campoCantPersonas.setText(Integer.toString(cantPersonas));
            campoPrecio.setText(Double.toString(precio));
            cBoxTiposDeCama.setSelectedItem(WordUtils.capitalizeFully(cama));

            btnModificar.setEnabled(true);
            btnBorrar.setEnabled(true);
            btnAgregar.setEnabled(false);
        } else {
            btnModificar.setEnabled(false);
            btnBorrar.setEnabled(false);
            btnAgregar.setEnabled(true);
        }
    }//GEN-LAST:event_tablaMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnBorrar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JComboBox<String> cBoxTiposDeCama;
    private javax.swing.JTextField campoCantPersonas;
    private javax.swing.JTextField campoCategoria;
    private javax.swing.JTextField campoPrecio;
    private javax.swing.JLabel cantPersonasValidacion;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JLabel precioValidacion;
    private javax.swing.JTable tabla;
    // End of variables declaration//GEN-END:variables
}
